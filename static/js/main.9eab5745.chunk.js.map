{"version":3,"sources":["data/top20_countries.csv","data/top20_no_eng.csv","Components/Header.js","Components/Footer.js","Components/About.js","Components/Introduction.js","Components/Top20.js","Components/Top20NoEng.js","Components/TreeMap.js","Components/Choropleth.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","Header","id","type","bg","className","href","title","Component","Footer","this","props","data","networks","social","map","network","key","name","url","About","Introduction","Top20","top20Text","React","createRef","top20Graph","drawGraph","csv","color","text","d3","current","style","svg","append","attr","classed","xScale","rangeRound","paddingInner","yScale","dataset","then","d","count","domain","nationality","call","selectAll","width","height","enter","bandwidth","on","value","join","transition","select","remove","ref","Top20NoEngland","top20NoEngText","top20NoEngGraph","TreeMap","treeMap","state","treemapData","treeData","bind","exit","root","sum","size","range","nodes","leaves","x0","y0","x1","y1","parent","code","getBBox","zoom","scaleExtent","transform","onClick","setState","no_eng","Choropleth","choropleth","selectedCountry","mapData","json1","self","minCount","features","feature","properties","maxCount","midCount","quarterCount","threeQuarterCount","colorScale","projection","geoMercator","fitSize","pathGenerator","geoPath","toLocaleString","legend","reverse","i","Math","round","json2","App","map_data","$","e","preventDefault","target","hash","$target","stop","animate","offset","top","window","location","css","top20","Top20NoEng","top20_no_eng","treemap_data","treemap_no_eng","map_data_no_eng","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.9eab5745.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/top20_countries.0e30f631.csv\";","module.exports = __webpack_public_path__ + \"static/media/top20_no_eng.47d6ad68.csv\";","import React, { Component } from 'react';\nimport ParticlesBg from 'particles-bg';\nimport { FaHome } from \"react-icons/fa\";\n\nclass Header extends Component {\n  render() {\n\n    return (\n      <header id=\"home\">\n      <ParticlesBg type=\"square\" bg={true} />\n      <nav id=\"nav-wrap\">\n         <a className=\"mobile-btn\" href=\"#nav-wrap\" title=\"Show navigation\">Show navigation</a>\n\t      <a className=\"mobile-btn\" href=\"#home\" title=\"Hide navigation\">Hide navigation</a>\n\n         <ul id=\"nav\" className=\"nav\">\n            <li><a className=\"text-left\" href=\"https:\\\\conormorgan.github.io\"><FaHome></FaHome> Home pAge</a></li>\n            <li className=\"current\"><a className=\"smoothscroll\" href=\"#home\">EPL Nations</a></li>\n            <li><a className=\"smoothscroll\" href=\"#about\">Introduction</a></li>\n\t         <li><a className=\"smoothscroll\" href=\"#top20\">Top20</a></li>\n            <li><a className=\"smoothscroll\" href=\"#treemap\">TreeMap</a></li>\n            <li><a className=\"smoothscroll\" href=\"#choropleth\">World Map</a></li>\n         </ul>\n      </nav>\n\n      <div className=\"row banner\">\n      \n         <div className=\"banner-text\">\n            <h1 className=\"responsive-headline\">Premier League Nations</h1>\n            <h3>Analysis of all the nations to have players compete in the English Premier League from its inception in 1992</h3>\n            <hr />\n         </div>\n      </div>\n\n      <p className=\"scrolldown\">\n         <a className=\"smoothscroll\" href=\"#about\"><i className=\"icon-down-circle\"></i></a>\n      </p>\n\n   </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\n\nclass Footer extends Component {\n  render() {\n\n    if(this.props.data){\n      var networks= this.props.data.social.map(function(network){\n        return <li key={network.name}><a href={network.url}><i className={network.className}></i></a></li>\n      })\n    }\n\n    return (\n      <footer>\n\n     <div className=\"row\">\n        <div className=\"twelve columns\">\n           <ul className=\"social-links\">\n              {networks}\n           </ul>\n\n           <ul className=\"copyright\">\n              <li>&copy; Copyright 2017 Nordic Giant</li>\n              <li>Design by <a title=\"Styleshout\" href=\"http://www.styleshout.com/\">Styleshout</a></li>\n           </ul>\n\n        </div>\n        <div id=\"go-top\"><a className=\"smoothscroll\" title=\"Back to Top\" href=\"#home\"><i className=\"icon-up-open\"></i></a></div>\n     </div>\n  </footer>\n    );\n  }\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\n\nclass About extends Component {\n  render() {\n\n    return (\n      <section id=\"about\">\n      <div className=\"row\">\n         <div className=\"two columns\">\n            \n         </div>\n         <div className=\"ten columns main-col\">\n            <h2>Introduction</h2>\n\n            <p>Welcome to my analysis on the different nationalities to have been represented in the English Premier league.</p>\n            <p>Premier League is one of, if not the most popular league worldwide with games being shown around the globe.</p>\n            <p>This global appeal is reflected in the diversity of players that have appeared in the league. There have been players from all corners of the globe that've played in the English top division.</p>\n            <p>Some countries are represented more than others and this analysis aims to show the differences between countries and any trends that can be seen.</p>\n\n            <div className=\"row\">\n               <div className=\"columns\">\n                  <h2>Methodology</h2>\n                  <p>The data used is scraped from FBRef website and is up-to-date until the end of the 2020/2021 season. Python and the scraping package Beautiful Soup were used to gather the data.</p>\n                  <p>Once the data was collecting, NumPy was used to cleanse and prepare the data in formats to be displayed. Displaying the data was done using D3.js</p>\n               </div>\n            </div>\n         </div>\n      </div>\n\n   </section>\n    );\n  }\n}\n\nexport default About;\n","import React, { Component } from 'react';\n\nclass Introduction extends Component{\n\n    render(){\n        return(\n            <section id = \"intro\">\n                <div className = \"row\">\n                    <div className = \"two columns\">\n\n                    </div>\n                    <div className = \"ten columns\">\n                        <h3>Information and Disclaimers</h3>\n                        <p>Data is from <a href = \"https://www.fbref.com\">FBRef</a> which was a great, free site with in depth statistics\n                        on football in England and around the world.                        \n                        </p>\n                    </div>\n                    \n                </div>\n            </section>\n            \n            \n        )\n    }\n}\n\n\n\nexport default Introduction;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Top20 extends Component {\n\n    constructor(props){\n        super(props);\n        this.top20Text = React.createRef();\n        this.top20Graph = React.createRef();\n    }\n\n    componentDidMount(){\n        this.drawGraph();\n    }\n\n    drawGraph(){\n        \n        const { csv, color } = this.props;\n        var height = 500;\n        var width = 900;\n        var adj = 65;\n\n        const text = d3.select(this.top20Text.current);\n        text.style(\"color\", color);\n        text.style(\"background-color\", \"white\");\n\n        // SVG\n        var svg = d3.select(this.top20Graph.current).append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"height\", height)\n        .attr(\"width\", width)\n        .attr(\"viewBox\", \"-\" + adj + \" -\"+ adj + \" \" + (width + adj) + \" \" + (height + adj*2))\n        .style(\"padding\", 10)\n        .style(\"margin\", 20)\n        .style('background-color', \"white\")\n        .classed(\"svg-content\", true);\n\n        //Scales\n        var xScale = d3.scaleBand()\n            .rangeRound([0,width])\n            .paddingInner(0.05);\n\n        var yScale = d3.scaleLinear()\n            .rangeRound([height,0]);\n\n\n        // Data\n        var dataset = d3.csv(csv);\n        dataset.then(function(data) {\n            data.map(function(d) {\n                d.count = +d.count;                \n                return d;});\n        });\n        // console.log(dataset);\n\n        dataset.then(function(data) {\n            xScale.domain(data.map(function(d) {return d.nationality}));\n            yScale.domain([0, d3.max(data, function(d){return d.count;})]);\n        });\n\n        // Axes\n\n        dataset.then(function(data){\n            // X axis and sets the ticks to be rotated\n            svg.append(\"g\")\n                .attr(\"class\", \"x-axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(xScale))\n                .selectAll(\"text\")\n                .attr(\"text-anchor\", \"end\")\n                .style(\"font-size\",\"12\")\n                .attr(\"transform\", \"rotate(-30)\");\n\n            // Y axis\n            svg.append(\"g\")\n                .attr(\"class\",\"y axis\")\n                .call(d3.axisLeft(yScale))\n                .selectAll(\"text\")\n                .style(\"font-size\",\"12\");\n\n            // Title\n            svg.append(\"text\")\n                .attr(\"class\", \"title\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", width/2)\n                .attr(\"y\", 0)\n                .style(\"text-decoration\", \"underline\")\n                .style(\"font-size\", \"22\")\n                .text(\"Number of players from each nationality to appear in the Premier league\");\n\n            // X axis text\n            svg.append(\"text\")\n                .attr(\"class\", \"x label\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", width/2)\n                .attr(\"y\", height + 60)\n                .style(\"font-size\",\"18\")\n                .text(\"Countries\");\n            \n            // Y axis text\n            svg.append(\"text\")\n                .attr(\"class\", \"y label\")\n                .attr(\"text-anchor\", \"middle\")\n                .style(\"font-size\",\"18\")\n                .attr(\"transform\", \"translate(-45,\" + height/2 +\") rotate(-90)\")\n                .text(\"Number of Individual Players\");\n    \n        });\n\n        // Bars\n        dataset.then(function(data) {  \n            svg.selectAll(\"div\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d) => xScale(d.nationality))\n            .attr(\"y\", (d) => yScale(d.count))\n            .attr(\"width\", xScale.bandwidth())\n            .on(\"mouseenter\", (value) => {\n                svg.selectAll(\".tooltip\")\n                    .data([value])\n                    .join(\"text\")\n                    .attr(\"class\", \"tooltip\")\n                    .text(value.count)\n                    .attr(\"x\", xScale(value.nationality) + xScale.bandwidth()/2)\n                    .attr(\"y\", yScale(value.count) - 8)\n                    .attr(\"text-anchor\", \"middle\")\n                    .transition();\n            })\n            .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n            .attr(\"height\", (d) => height - yScale(d.count))\n            .style(\"fill\", color);\n        });\n\n    }\n    render(){\n\n        var text = \"20 Countries with the most players to have played in the Premier League\";\n        // Data does nothing here, just displays it so it isn't unused\n        \n    \n        return(\n            <section id = \"top20\">\n                <div className = \"row\">\n                    <div className=\"five columns\">\n                        <div ref = {this.top20Text}>\n                            <h3>{text}</h3>\n                            <p>This barchart shows the 20 countries with the most players to have played in the Premier League</p>\n                            <p>As you can see England has by far the most players to have played, not a surprise really</p>\n                            <p>This is a common trend throughout all of the data and graphs and so in some cases, \n                                it is more interesting to remove the English as they skew the graphs and make it more difficult to provide insights.\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <div className= \"seven columns\">\n                        <div ref = {this.top20Graph}></div>\n                    </div>\n                </div>    \n            </section>\n        )\n    }\n}\n\nexport default Top20;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Top20NoEngland extends Component {\n\n    constructor(props){\n        super(props);\n        this.top20NoEngText = React.createRef();\n        this.top20NoEngGraph = React.createRef();\n    }\n\n    componentDidMount(){\n        this.drawGraph();\n    }\n\n    drawGraph(){\n        \n        const { csv, color } = this.props;\n        var height = 500;\n        var width = 900;\n        var adj = 65;\n\n        const text = d3.select(this.top20NoEngText\n.current);\n        text.style(\"color\", color);\n        text.style(\"background-color\", \"white\");\n\n        // SVG\n        var svg = d3.select(this.top20NoEngGraph.current).append(\"svg\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"height\", height)\n        .attr(\"width\", width)\n        .attr(\"viewBox\", \"-\" + adj + \" -\"+ adj + \" \" + (width + adj) + \" \" + (height + adj*2))\n        .style(\"padding\", 10)\n        .style(\"margin\", 20)\n        .style('background-color', \"white\")\n        .classed(\"svg-content\", true);\n\n        //Scales\n        var xScale = d3.scaleBand()\n            .rangeRound([0,width])\n            .paddingInner(0.05);\n\n        var yScale = d3.scaleLinear()\n            .rangeRound([height,0]);\n\n\n        // Data\n        var dataset = d3.csv(csv);\n        dataset.then(function(data) {\n            data.map(function(d) {\n                d.count = +d.count;                \n                return d;});\n        });\n        // console.log(dataset);\n\n        dataset.then(function(data) {\n            xScale.domain(data.map(function(d) {return d.nationality}));\n            yScale.domain([0, d3.max(data, function(d){return d.count;})]);\n        });\n\n        // Axes\n        dataset.then(function(data){\n            // X axis and sets the ticks to be rotated\n            svg.append(\"g\")\n                .attr(\"class\", \"x-axis\")\n                .attr(\"transform\", \"translate(0,\" + height + \")\")\n                .call(d3.axisBottom(xScale))\n                .selectAll(\"text\")\n                .attr(\"text-anchor\", \"end\")\n                .style(\"font-size\",\"12\")\n                .attr(\"transform\", \"rotate(-30)\");\n\n            // Y axis\n            svg.append(\"g\")\n                .attr(\"class\",\"y axis\")\n                .call(d3.axisLeft(yScale))\n                .selectAll(\"text\")\n                .style(\"font-size\",\"12\");\n\n            // Title\n            svg.append(\"text\")\n                .attr(\"class\", \"title\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", width/2)\n                .attr(\"y\", 0)\n                .style(\"text-decoration\", \"underline\")\n                .style(\"font-size\", \"22\")\n                .text(\"Number of players from each nationality to appear in the Premier league\");\n\n            // X axis text\n            svg.append(\"text\")\n                .attr(\"class\", \"x label\")\n                .attr(\"text-anchor\", \"middle\")\n                .attr(\"x\", width/2)\n                .attr(\"y\", height + 60)\n                .style(\"font-size\",\"18\")\n                .text(\"Countries\");\n            \n            // Y axis text\n            svg.append(\"text\")\n                .attr(\"class\", \"y label\")\n                .attr(\"text-anchor\", \"middle\")\n                .style(\"font-size\",\"18\")\n                .attr(\"transform\", \"translate(-45,\" + height/2 +\") rotate(-90)\")\n                .text(\"Number of Individual Players\");\n    \n        });\n\n        // Bars\n        dataset.then(function(data) {  \n            svg.selectAll(\"div\")\n            .data(data)\n            .enter()\n            .append(\"rect\")\n            .attr(\"class\", \"bar\")\n            .attr(\"x\", (d) => xScale(d.nationality))\n            .attr(\"y\", (d) => yScale(d.count))\n            .attr(\"width\", xScale.bandwidth())\n            .attr(\"height\", (d) => height - yScale(d.count))\n            .on(\"mouseenter\", (value) => {\n                svg.selectAll(\".tooltip\")\n                    .data([value])\n                    .join(\"text\")\n                    .attr(\"class\", \"tooltip\")\n                    .text(value.count)\n                    .attr(\"x\", xScale(value.nationality) + xScale.bandwidth()/2)\n                    .attr(\"y\", yScale(value.count) - 8)\n                    .attr(\"text-anchor\", \"middle\")\n                    .transition();\n            })\n            .on(\"mouseleave\", () => svg.select(\".tooltip\").remove())\n            .style(\"fill\", color);\n        });\n\n    }\n    render(){\n\n        var text = \"England Removed\";\n        // Data does nothing here, just displays it so it isn't unused\n        \n    \n        return(\n            <section id = \"top20\">\n                <div className = \"row\">\n                    <div className=\"five columns\">\n                        <div ref = {this.top20NoEngText}>\n                            <h3>{text}</h3>\n                            <p>This chart looks much better and gives us more information. The most common country is France followed closely by the Scots and Irish.</p>\n                            <p>Historically there have always been close links between England and France and the close proximity of the countries must also play a part too. \n                                These are not the only reasons for French players featuring so often. France is a two-time men's FIFA World Cup Winner and UEFA European Championship\n                                winner so there is a high standard of football in the country from the 80s and 90s. \n                            </p>\n                            <p>The Scottish and Irish are unsurprising being in the top 3. Both countries have a long history of football, speak the same language and have similar culture to \n                                England which makes the English league an attractive place to play in. Both countries home top divisions are porfessional however, do not have the money or skill\n                                to compete with the top division in England, especially since the creation of the Premier League, meaning the best Irish and Scots move to England.\n                            </p>\n                        </div>\n                    </div>\n                    \n                    <div className= \"seven columns\">\n                        <div ref = {this.top20NoEngGraph} width=\"600\" height=\"500\"></div>\n                    </div>\n                </div>    \n                    {/* <svg ref = {this.top20NoEngGraph} width=\"600\" height=\"500\" /> */}\n            </section>\n        )\n    }\n}\n\nexport default Top20NoEngland;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass TreeMap extends Component{\n\n    constructor(props){\n        super(props);\n        this.treeMap = React.createRef();\n        this.state = {\n            treemapData: this.props.treeData,\n        }\n\n\n        this.drawGraph = this.drawGraph.bind(this);\n    }\n\n    componentDidMount(){\n        this.drawGraph();\n    }\n\n    componentDidUpdate(){\n        d3.selectAll(\".tree\").remove().exit();\n\n        this.drawGraph();\n    }\n\n    drawGraph(){\n\n        const data = this.state.treemapData;\n\n        var width = 959;\n        var height = 600;\n        var adj = 35;\n\n        // SVG\n        var svg = d3.select(this.treeMap.current).append(\"svg\")\n                    .attr(\"class\", \"tree\")\n                    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n                    .attr(\"height\", height)\n                    .attr(\"width\", width)\n                    .attr(\"viewBox\", \"-\" + adj + \" -\"+ adj + \" \" + (width + adj) + \" \" + (height + adj*2))\n                    .style(\"padding\", 10)\n                    .style(\"margin\", 20)\n                    .style('background-color', \"white\")\n                    .classed(\"svg-content\", true);\n\n        // Give data to hierarchy layout -> may need to change d.value to d.count\n        var root = d3.hierarchy(data).sum((d => d.count));;\n\n        // Initialise treemap\n        d3.treemap()\n            .size([width, height])\n            .paddingInner(2)\n            (root);\n\n        const color = d3.scaleOrdinal().domain([\"Europe\", \"Asia\", \"Africa\", \"North America\", \"South America\",\"Oceania\"])\n                                       .range([ \"#90be6d\", \"#ffbc42\", \"#8f2d56\",\"#218380\",\"#3a0ca3\",\"#73d2de\"]);\n\n        // Select the nodes\n        var nodes = svg.selectAll(\"rect\")\n                        .data(root.leaves());\n\n        // Draw the rectangles\n        nodes.enter()\n            .append(\"rect\")\n            .attr(\"class\",\"rectangle\")\n            .attr('x', function (d) { return d.x0; })\n            .attr('y', function (d) { return d.y0; })\n            .attr('width', function (d) { return d.x1 - d.x0; })\n            .attr('height', function (d) { return d.y1 - d.y0; })\n            .style(\"stroke\", \"black\")\n            .style(\"fill\", function(d){ \n                return color(d.parent.data.name)\n            })\n            .append(\"title\").text(function(d){\n                if (d.data.count === 1){\n                    return d.data.name + \": \" + d.data.count + \" player\"\n                }\n                else{\n                    return d.data.name + \": \" + d.data.count + \" players\";\n                }\n            });\n\n        \n        nodes.exit().remove()\n\n        // Titles\n        svg.selectAll(\"text\")\n            .data(root.leaves())\n            .enter()\n            .append(\"text\")\n            .attr(\"x\", function(d){ return d.x0+5})    // +10 to adjust position (more right)\n            .attr(\"y\", function(d){ return d.y0+20})    // +20 to adjust position (lower)\n            .text(function(d){return d.data.code})\n            .attr(\"fill\", \"white\")\n            .attr(\"opacity\", function(d){\n                var width = this.getBBox().width;\n                var height =this.getBBox().height;\n                if((width + 5 < d.x1 - d.x0)&&(height + 20 < d.y1-d.y0)){\n                    return 1;\n                }\n                else{\n                    return 0;\n                }\n            });\n\n        // Country counts under title\n        svg.selectAll(\"vals\")\n            .data(root.leaves())\n            .enter()\n            .append(\"text\")\n            .attr(\"x\", function(d){ return d.x0+5})    // +10 to adjust position (more right)\n            .attr(\"y\", function(d){ return d.y0+35})    // +20 to adjust position (lower)\n            .text(function(d){ \n                if(d.data.count > 26){\n                    return d.data.count \n                }\n            })\n            .attr(\"font-size\", \"11px\")\n            .attr(\"fill\", \"white\")\n    \n        // Add the chart heading\n        svg\n        .append(\"text\")\n            .attr(\"x\", 0)\n            .attr(\"y\", -14)    // +20 to adjust position (lower)\n            .text(\"Treemap showing the counts of players from each country to play in EPL and coloured by continent\")\n            .attr(\"font-size\", \"19px\")\n            .attr(\"fill\",  \"black\" );\n\n        //Behavioiur for zoom functionality\n        var zoom = d3.zoom()\n                    .scaleExtent([1, 8])\n                    .on('zoom', function() {\n                        svg.selectAll('rect')\n                        .attr('transform', d3.event.transform);\n                        svg.selectAll(\"text\")\n                        .attr('transform', d3.event.transform);\n                    });\n\n        // Calls the zoom funct and removes panning and dragging\n        svg.call(zoom)\n            .on(\"mousedown.zoom\", null)\n            .on(\"touchstart.zoom\", null)\n            .on(\"touchmove.zoom\", null)\n            .on(\"touchend.zoom\", null);\n    \n    }\n\n    render(){\n        return(\n            <section id = \"treemap\">\n                <div className = \"row\">\n                    <h2 className=\"header-dark-bg\">Treemap</h2>\n\n                    <p className=\"text-dark-bg\">\n                        This treemap is another way to visualise the data in, perhaps, an easier format to get the dominance of European and British players.\n                        Each country has a rectangle and the area of each rectangle corresponds to how many payers have featured in the league.\n                        Also the treemap is colour-coded to show the continents and they have contributed to the array of players.\n                    </p>\n                    <p className=\"text-dark-bg\">\n                        The treemap is interactive as hovering over each country will show the player count. \n                        You can also zoom in to inspect some of the smaller countries more closely and see how they stack up.\n                        Again, the buttons are there to remove the English players, clicking either button is also a good way to reset the view of the treemap.\n                    </p>\n\n                        \n                    \n                </div>\n\n                <div className = \"row\">\n                    <div className=\"six columns\">\n                        <button onClick= {() => this.setState({treemapData: this.props.treeData})}>All countries</button>\n                        <button onClick= {() => this.setState({treemapData: this.props.no_eng})}>No England</button>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"nine columns\">\n                        <div ref = {this.treeMap}></div>\n                    </div>\n                </div>\n                \n                \n            </section>\n        )\n    }\n\n}\n\nexport default TreeMap;","import React, { Component } from 'react';\nimport * as d3 from 'd3';\nimport { geoMercator, geoPath } from 'd3';\n\nclass Choropleth extends Component{\n\n    constructor(props){\n        super(props);\n\n        this.choropleth = React.createRef();\n        this.state = {\n            selectedCountry: null,\n            mapData: null,\n            value: this.props.json1\n        }\n        this.drawGraph = this.drawGraph.bind(this);\n        // this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount(){\n        this.drawGraph();\n    }\n\n    componentDidUpdate(){\n        d3.selectAll(\".choropleth\").remove().exit();\n        this.drawGraph();\n    }\n\n    // handleChange(event){\n    //     console.log(event.target.value);\n    //     console.log(this.state);\n    //     // this.setState({mapData: event.target.value});\n    //     if (event.target.value === 1){\n    //         console.log(\"set state to json1\")\n    //         this.setState({value: this.props.json1});\n    //         console.log(this.state);\n    //     }\n    //     else if (String(event.target.value) === \"2\"){\n    //         console.log(\"set state to json2\")\n    //         this.setState({value: this.props.json2});\n    //         console.log(this.state);\n    //     }\n    // }\n\n    drawGraph(){\n\n        if (this.state.mapData == null){\n            var data  = this.props.json1;\n        }\n        else{\n            data = this.state.mapData;\n        }\n\n        var selectedCountry = this.state.selectedCountry;\n        var self = this;\n\n        var height = 600;\n        var width = 900;\n        var adj = 20;\n\n        const minCount = d3.min(data.features, feature => feature.properties[\"count\"]);\n        const maxCount = d3.max(data.features, feature => feature.properties[\"count\"]);\n        const midCount = maxCount/2;\n        const quarterCount = maxCount/4;\n        const threeQuarterCount = 3* quarterCount;\n        const colorScale = d3.scaleLinear()\n                                .domain([minCount, quarterCount, midCount, threeQuarterCount ,maxCount])\n                                .range([\"#ffffff\",\"#fecc5c\",\"#fd8d3c\",\"#f03b20\",\"#bd0026\"]);\n\n        // Creates SVG area\n        var svg = d3.select(this.choropleth.current)\n        .append(\"svg\")\n        .attr(\"class\", \"choropleth\")\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"height\", height)\n        .attr(\"width\", width)\n        .attr(\"viewBox\", \"-\" + adj + \" -\"+ adj + \" \" + (width + adj) + \" \" + (height + adj*2))\n        .style(\"padding\",0)\n        .style(\"margin\", 20)\n        .style('background-color', \"2060a8\")\n        .classed(\"svg-content\", true);\n\n        var projection = geoMercator().fitSize([width,height], this.state.selectedCountry || data);\n        const pathGenerator = geoPath().projection(projection);\n\n        // Creates each country as a path\n        svg.selectAll(\"country\")\n        .data(data.features)\n        .join(\"path\")\n        .attr(\"class\",\"country\")\n        .on(\"click\", function(feature) {\n            if (selectedCountry === feature){\n                self.setState({\n                    selectedCountry: null\n                })\n            }else{\n                self.setState({\n                    selectedCountry: feature\n                })\n            }\n        })\n        .attr(\"stroke\", \"c7c7c7\")\n        .attr(\"stroke-width\", \"1pt\")\n        .attr(\"fill\", feature => colorScale(feature.properties[\"count\"]))\n        .attr(\"d\", feature => pathGenerator(feature))\n        .append(\"title\").text(feature => feature.properties[\"name\"]);\n\n        // Labels for each country\n        svg.selectAll(\"label\")\n            .append(\"div\")\n            .data([selectedCountry])\n            .join(\"text\")\n            .attr(\"class\", \"chorolabel\")\n            .text(function(feature){\n                return feature && feature.properties.name +\n                \": \" +\n                feature.properties[\"count\"].toLocaleString()\n            } \n            )\n            .attr(\"x\", 10)\n            .attr(\"y\",25);\n\n            var zoom = d3.zoom()\n                        .scaleExtent([1, 8])\n                        .on('zoom', function() {\n                            svg.selectAll('path')\n                            .attr('transform', d3.event.transform);\n                        });\n\n            svg.call(zoom);\n\n            // Legend SVG\n            var legend = d3.select(\".choropleth\").append(\"svg\")\n                            .attr(\"class\", \"legend\")\n                            .attr(\"width\", 140)\n                            .attr(\"height\", 100)\n                            .attr(\"x\", 10)\n                            .attr(\"y\", height - 100)\n                            .selectAll(\"g\")\n                                .data(colorScale.domain().reverse())\n                                .enter().append(\"g\")\n                                .attr(\"transform\", function(d,i){return \"translate(0,\" + i*20 + \")\";});\n                            \n            \n            // Add a rectangle as with colours for scale\n            legend.append(\"rect\")\n                    .attr(\"width\", 18)\n                    .attr(\"height\", 18)\n                    .style(\"fill\", colorScale);\n\n            // Labels for each colour in scale        \n            legend.append(\"text\")\n                    .attr(\"x\", 30)\n                    .attr(\"y\", 10)\n                    .attr(\"dy\", \".35em\")\n                    .text(function(d){return Math.round(d/50)*50 + \" players\"});\n                    \n            \n    }\n\n    render(){\n        \n        return (\n\n            <section id = \"choropleth\">\n                <div className = \"row\">\n                    <div className = \"twelve columns\">\n                        <h2>World Map</h2>\n                        <p>This is an interactive map showing all the countries that  have featured in the Premier league. \n                            The colour of each country corresponds to the number of players that a country has.\n                            The buttons below are to show the full dataset including England and to show the dataset with England removed,\n                            which looks better as England skews the colour scale.\n                        </p>\n                    </div>\n                </div>\n                <div className = \"row\">\n                    <div className=\"six columns\">\n                        <button onClick= {() => this.setState({mapData: this.props.json1})}>All countries</button>\n                        <button onClick= {() => this.setState({mapData: this.props.json2})}>No England</button>\n                    </div>\n                </div>\n                {/* <div className = \"row\">\n                    <label><input type = \"radio\" checked = {true} value = \"1\" onChange = {(e) => this.handleChange(e)}/>All countries</label>\n                    <label><input type = \"radio\" value = \"2\" />No England</label>\n                    \n                    <select  onChange = {this.handleChange}>\n                        <option value = \"1\">All Countries</option>\n                        <option value = \"2\">No England</option>\n                    </select>\n                </div> */}\n                \n                <div className = \"row\">\n                    <div ref = {this.choropleth}></div>\n                </div>\n                <div className = \"row\">\n                    <div className= \"twelve columns\">\n                        <h4>British Isles and Europe</h4>\n                        <p>When England is included, it is the only country that appears to have any colour at all,\n                                with the rest looking white in comparison. With England out of the picture, the other countries \n                                and trends are much more visible and trends can be noticed.\n                        </p>\n                        <p>We can see that there is a cluster of red countries in mainland Europe - France, Spain, Germany, Netherlands - and Scandinavia. \n                            Traditionally these nations have a large interest in football and the proximity to the UK means that quite a few\n                            players have made the journey to the Premier league.\n                        </p>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className= \"twelve columns\">\n                        <h4>Africa, the Americas and the Rest </h4>\n                        <p>\n                            South America is known for being a football-crazy continent and this is reflected by the map with Brazil and Argentina\n                            being highlighted in red as the main coutries to export players from South America. There is a tendency for players \n                            from South America to sign for teams in countries along the Mediterranean however there has still been a significant amount \n                            to grace the pitch in England.\n                        </p>\n                        <p>\n                            The United States is one of the largest countries in the world and has had quite a few citizens feature in the league,\n                            it appears to be underperforming for its population size. The States have had 45 players appear, but this is much lower than other\n                            much smaller countries such as wee Northern Ireland with a population of 1.8 million and 61 players, or Norway and its return of 65\n                            from 5.4 million. Football is not one of the main sports in USA and with MLS still in its relative infancy, USA is lagging behind with\n                            its development of the sport.\n                        </p>\n                        <p>\n                            Africa as a continent is an emerging nation. There is a love of football there, however the resources and infrastructure is lacking and\n                            so it is under represented as a continent overall. There is a pocket of countries in West Africa that are the most common representatives\n                            in England. Nigeria, the most populous country on the continent, is the country with the most players and is closely followed by neighbours\n                            Senegal, Ivory Coast, Cameroon and Ghana. Regular viewers of the Premier League are sure to know some stars from these countries with \n                            Sadio Mané, Didier Drogba, Jay-Jay Okocha, Samuel Eto'o and Michael Essien all featuring for multiple years.\n                        </p>\n                        <p>\n                            Australia by far the country with the most Premier league players in Asia and Oceania with over 50. These continents generally do not have a large football \n                            following and with that there is not much infrastructure or desire to play professionally. Countries like China, India and Indonesia plus many others\n                            in Asia have the potential to become football powerhouses due to the populations they have at their diposal however the sports are just not at the right\n                            stage yet to warrant more investment.\n                        </p>\n                    </div>\n                </div>\n                \n            </section>\n        );\n    }\n\n}\n\nexport default Choropleth;","import React, { Component } from 'react';\nimport $ from 'jquery';\nimport './App.css';\nimport Header from './Components/Header';\nimport Footer from './Components/Footer';\nimport About from './Components/About';\n\nimport Introduction from './Components/Introduction';\nimport Top20 from './Components/Top20';\nimport Top20NoEng from './Components/Top20NoEng';\nimport TreeMap from './Components/TreeMap';\nimport Choropleth from './Components/Choropleth';\n\n// Data imports\nimport top20 from './data/top20_countries.csv';\nimport top20_no_eng from './data/top20_no_eng.csv';\nimport map_data from './data/full-medium-world-data.json';\nimport map_data_no_eng from './data/no-eng-medium-world-data.json';\nimport treemap_data from './data/treemap-codes.json';\nimport treemap_no_eng from './data/treemap-codes-noeng.json';\n\n\nclass App extends Component {\n\n  constructor(props){\n    super(props);\n    this.state = {\n      mapData: map_data,\n    };\n\n  }\n\n  componentDidMount(){\n    $('.smoothscroll').on('click',function (e) {\n\t    e.preventDefault();\n\n\t    var target = this.hash,\n\t    $target = $(target);\n\n\t    $('html, body').stop().animate({\n\t        'scrollTop': $target.offset().top\n\t    }, 800, 'swing', function () {\n\t        window.location.hash = target;\n\t    });\n\t  });\n\n    $('header').css({ 'height': $(window).height() });\n    $(window).on('resize', function() {\n \n         $('header').css({ 'height': $(window).height() });\n         $('body').css({ 'width': $(window).width() })\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Header />\n        <About />\n        <Introduction />\n        <Top20  csv = {top20} color = \"purple\"/>\n        <Top20NoEng csv = {top20_no_eng} color = \"green\"/>\n        <TreeMap treeData = {treemap_data} no_eng = {treemap_no_eng}/>\n        <Choropleth csv = {top20} json1 = {map_data} json2 = {map_data_no_eng} />\n        <Footer  />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}